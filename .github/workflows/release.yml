name: Eclair Release

on:
  # Trigger the workflow on the new 'v*' tag created
  push:
    tags:
      - "v*"

jobs:
  create_release:
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build_artifact:
    needs: [create_release]
    name: ${{ matrix.os }}/GHC ${{ matrix.ghc }}/${{ github.ref }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        ghc:
          - "9.4.4"
        cabal: ["3.8.1.0"]

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set tag name
        uses: olegtarasov/get-tag@v2
        id: tag
        with:
          tagRegex: "v(.*)"
          tagRegexGroup: 1

      - name: Setup Haskell
        uses: actions/setup-haskell@v1.1.1
        id: setup-haskell-cabal
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Install tools
        run: |
          cabal install hpack
          cabal install hspec-discover
          cabal install hlint
          ghc --version
          haskell-language-server-wrapper --version
          cabal --version

      - name: Install Souffle
        run: |
          sudo apt install bison build-essential cmake doxygen flex g++ git  libffi-dev libncurses5-dev libsqlite3-dev make mcpp python sqlite zlib1g-dev
          git clone git@github.com:souffle-lang/souffle.git
          cd souffle
          git checkout 2.3
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build -j
          sudo cmake --build build --target install
          souffle --version

      - name: Install llvm-14
        run: |
          sudo apt install llvm-14
          sudo apt install lld-14
          sudo apt install clang-14

      - name: Freeze
        run: |
          cabal freeze

      - name: Cache ~/.cabal/store
        uses: actions/cache@v1
        with:
          path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

      - name: Build binary
        run: |
          mkdir dist
          cabal install exe:eclair --install-method=copy --overwrite-policy=always --installdir=dist

      - name: Set binary path name
        run: echo "::set-env name=BINARY_PATH::./dist/eclair${{ env.EXT }}"

      - name: Strip binary
        run: strip ${{ env.BINARY_PATH }}

      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url

      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          echo "::set-output name=upload_url::$(cat release_url/release_url.txt)"
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ${{ env.BINARY_PATH }}
          asset_name: eclair-${{ steps.tag.outputs.tag }}-${{ runner.os }}-ghc-${{ matrix.ghc }}${{ env.EXT }}
          asset_content_type: application/octet-stream
